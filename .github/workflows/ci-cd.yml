name: CI/CD Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:

jobs:
  install-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: pnpm install
      - run: pnpm lint
      - run: pnpm typecheck
      - run: pnpm test
      - run: pnpm build

  deploy-frontend:
    needs: install-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: apps/web

      - name: Check Vercel output folder
        run: ls -la apps/web

      - name: Check if vercel.json exists
        run: |
             ls -al apps/web
             cat apps/web/vercel.json

      - name: Deploy with Vercel CLI manually
        run: |
              npm install -g vercel@latest
    vercel --cwd apps/web --prod --confirm --token=${{ secrets.VERCEL_TOKEN }}

  deploy-backend:
    needs: install-build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Render
        run: |
          if [ -z "${{ secrets.RENDER_DEPLOY_HOOK }}" ]; then
            echo "RENDER_DEPLOY_HOOK is not set. Skipping deploy."
            exit 1
          fi
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
